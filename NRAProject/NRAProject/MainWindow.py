# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.Qt import *
from PyQt5.QtCore import Qt

from UseGuide1 import Ui_Dialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 800)
        # MainWindow.setWindowState(Qt.WindowMaximized)#设置窗口默认最大化
        self.ui = MainWindow  # 命名窗口
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("仿宋")
        font.setPointSize(12)
        font.setItalic(False)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                 "font: 12pt \"仿宋\";\n"
                                 "color: rgb(0, 0, 0);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet("#centralwidget{border-image:url(pic/cover.png);}")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 30))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.hide()  # 设置工具栏默认隐藏
        font = QtGui.QFont()
        font.setFamily("仿宋")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.toolBar.setFont(font)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_UseGuide = QtWidgets.QAction(MainWindow)
        self.action_UseGuide.setObjectName("action_UseGuide")
        self.action_UseGraph = QtWidgets.QAction(MainWindow)
        self.action_UseGraph.setObjectName("action_UseGraph")
        self.action_New = QtWidgets.QAction(MainWindow)
        self.action_New.setObjectName("action_New")
        self.action_Open = QtWidgets.QAction(MainWindow)
        self.action_Open.setObjectName("action_Open")
        self.action_Save = QtWidgets.QAction(MainWindow)
        self.action_Save.setObjectName("action_Save")
        self.action_SaveAs = QtWidgets.QAction(MainWindow)
        self.action_SaveAs.setObjectName("action_SaveAs")
        self.action_Minimum = QtWidgets.QAction(MainWindow)
        self.action_Minimum.setObjectName("action_Minimum")
        self.action_DMP = QtWidgets.QAction(MainWindow)
        self.action_DMP.setObjectName("action_DMP")
        self.action_RA = QtWidgets.QAction(MainWindow)
        self.action_RA.setObjectName("action_RA")
        self.action_CheckMinimum = QtWidgets.QAction(MainWindow)
        self.action_CheckMinimum.setObjectName("action_CheckMinimum")
        self.action_CheckDMP = QtWidgets.QAction(MainWindow)
        self.action_CheckDMP.setObjectName("action_CheckDMP")
        self.action_CheckRA = QtWidgets.QAction(MainWindow)
        self.action_CheckRA.setObjectName("action_CheckRA")
        self.action_lineation = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../划线.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap("D:/pythonProject/NRAProject/图标/画直线.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_lineation.setIcon(icon)
        self.action_lineation.setObjectName("action_lineation")
        # 设置快捷键
        self.action_lineation.setShortcut("E")
        # self.action_lineation2 = QtWidgets.QAction(MainWindow)
        # icon1 = QtGui.QIcon()
        # icon1.addPixmap(QtGui.QPixmap("../../划线.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        # icon1.addPixmap(QtGui.QPixmap("D:/pythonProject/NRAProject/图标/画曲线.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        # self.action_lineation2.setIcon(icon1)
        # self.action_lineation2.setObjectName("action_lineation2")

        self.action_point = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../划线.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon2.addPixmap(QtGui.QPixmap("D:/pythonProject/NRAProject/图标/画点1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_point.setIcon(icon2)
        self.action_point.setObjectName("action_point")
        # 设置快捷键
        self.action_point.setShortcut("N")

        self.action_point_2 = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../划线.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon3.addPixmap(QtGui.QPixmap("D:/pythonProject/NRAProject/图标/橡皮檫1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_point_2.setIcon(icon3)
        self.action_point_2.setObjectName("action_point_2")
        # 设置快捷键
        self.action_point_2.setShortcut("D")

        self.action_turnup = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../划线.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon4.addPixmap(QtGui.QPixmap("D:/pythonProject/NRAProject/图标/收起工具栏.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_turnup.setIcon(icon4)
        self.action_turnup.setObjectName("action_turnup")


        self.action_mouse = QtWidgets.QAction(MainWindow)
        self.action_mouse.setObjectName('action_mouse')
        # 设置快捷键
        self.action_mouse.setShortcut("M")

        self.menu.addAction(self.action_New)
        self.menu.addSeparator()
        self.menu.addAction(self.action_Open)
        self.menu.addSeparator()
        self.menu.addAction(self.action_Save)
        self.menu.addSeparator()
        self.menu.addAction(self.action_SaveAs)
        self.menu_2.addAction(self.action_UseGuide)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.action_UseGraph)
        self.menu_3.addAction(self.action_Minimum)
        self.menu_3.addSeparator()
        self.menu_3.addAction(self.action_DMP)
        self.menu_3.addSeparator()
        self.menu_3.addAction(self.action_RA)
        self.menu_4.addAction(self.action_CheckMinimum)
        self.menu_4.addSeparator()
        self.menu_4.addAction(self.action_CheckDMP)
        self.menu_4.addSeparator()
        self.menu_4.addAction(self.action_CheckRA)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.toolBar.addAction(self.action_mouse)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_point)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_lineation)
        self.toolBar.addSeparator()
        # self.toolBar.addAction(self.action_lineation2)
        # self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_point_2)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_turnup)
        self.toolBar.addSeparator()
        self.action_UseGuide.triggered.connect(self.UseGuide_1)  # 实现向导创建网络的页面跳转
        # self.action_UseGraph.triggered.connect(self.UseGraphAction)  # 实现图形绘制网络的工具栏显示
        self.action_turnup.triggered.connect(self.hideToolBar)  # 实现图 形绘制网络的工具栏收起

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def UseGuide_1(self):  # 定义窗口跳转槽函数
        self.ui.hide()
        dialog1 = QtWidgets.QDialog()
        UseGuide1 = Ui_Dialog()
        UseGuide1.setupUi(dialog1)
        # dialog1.show()
        # dialog1.exec_()
        dialog1.show()
        dialog1.exec_()
        self.ui.show()




    def showToolBar(self):  # 定义显示绘图工具栏槽函数
        self.toolBar.show()



    def hideToolBar(self):  # 定义绘图工具栏收起槽函数
        self.toolBar.hide()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "网络可靠性"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "创建网络"))
        self.menu_3.setTitle(_translate("MainWindow", "计算"))
        self.menu_4.setTitle(_translate("MainWindow", "查看结果"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action_UseGuide.setText(_translate("MainWindow", "使用向导创建网络"))
        self.action_UseGraph.setText(_translate("MainWindow", "打开图形化绘制工具"))
        self.action_New.setText(_translate("MainWindow", "新建\tCtrl + N"))
        self.action_Open.setText(_translate("MainWindow", "打开\tCtrl + O"))
        self.action_Save.setText(_translate("MainWindow", "保存\tCtrl + S"))
        self.action_SaveAs.setText(_translate("MainWindow", "另存为"))
        self.action_Minimum.setText(_translate("MainWindow", "最小路集搜索"))
        self.action_DMP.setText(_translate("MainWindow", "D-MP搜索"))
        self.action_RA.setText(_translate("MainWindow", "可靠性评估"))
        self.action_CheckMinimum.setText(_translate("MainWindow", "查看最小路集搜索结果"))
        self.action_CheckDMP.setText(_translate("MainWindow", "查看D-MP搜索结果"))
        self.action_CheckRA.setText(_translate("MainWindow", "查看可靠性评估结果"))

        # 组内对象只能有一个被选中
        self.checkGroup = QActionGroup(self)
        self.checkGroup.addAction(self.action_lineation)
        self.checkGroup.addAction(self.action_point)
        self.checkGroup.addAction(self.action_point_2)
        self.checkGroup.addAction(self.action_mouse)


        self.action_lineation.setCheckable(True)
        self.action_lineation.setText(_translate("MainWindow", "边 E"))
        self.action_lineation.setToolTip(_translate("MainWindow", "绘制边"))
        # self.action_lineation2.setText(_translate("MainWindow", "曲线"))
        # self.action_lineation2.setToolTip(_translate("MainWindow", "绘制曲线"))
        self.action_point.setText(_translate("MainWindow", "节点 N"))
        self.action_point.setCheckable(True)
        self.action_point.setToolTip(_translate("MainWindow", "绘制节点"))
        self.action_point_2.setCheckable(True)
        self.action_point_2.setText(_translate("MainWindow", "删除 D"))
        self.action_point_2.setToolTip(_translate("MainWindow", "删除"))
        self.action_turnup.setText(_translate("MainWindow", "收起"))
        self.action_turnup.setToolTip(_translate("MainWindow", "收起工具栏"))
        self.action_mouse.setCheckable(True)
        self.action_mouse.setChecked(True)
        self.action_mouse.setText(_translate("MainWindow", "鼠标 M"))


import qt_rc

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
